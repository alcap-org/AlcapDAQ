#debug=all
list_modules
dump_contents
show_input_data

[ MODULES ]
## Get / save pulses
# load_pulses = LoadPulses
analyse_pulses = MakeAnalysedPulses
detector_pulses = MakeDetectorPulses
SavePulses

## Plot TAPS
PlotTAP_Time
PlotTAP_Amplitude
PlotTAP_Integral

## Plot TDPs
PlotTDPs

#muSc_self  = PlotTAP_selfCorrelation( muSc , muSc ,-5000,5000) 
#sir2_f_self= PlotTAP_selfCorrelation( SiR2-F , SiR2-F ,-5000,5000,600,900) 
#sir2_s_self= PlotTAP_selfCorrelation( SiR2-S , SiR2-S ,-5000,5000) 

sir2_f_stops=PlotTME_muStops(250,600,630,830,sir2,fast)
sir2_s_stops=PlotTME_muStops(250,600,630,830,sir2,slow)
sil2_stops=PlotTME_muStops(250,600,630,830,sil2)

## Plot TDiffs
#Thin right, thick right
#r11_r2_f= PlotTAP_TDiff( SiR1-1-F , SiR2-F ) 
#r12_r2_f= PlotTAP_TDiff( SiR1-2-F , SiR2-F ) 
#r13_r2_f= PlotTAP_TDiff( SiR1-3-F , SiR2-F ) 
#r14_r2_f= PlotTAP_TDiff( SiR1-4-F , SiR2-F ) 
#r11_r2_s= PlotTAP_TDiff( SiR1-1-S , SiR2-S ) 
#r12_r2_s= PlotTAP_TDiff( SiR1-2-S , SiR2-S ) 
#r13_r2_s= PlotTAP_TDiff( SiR1-3-S , SiR2-S ) 
#r14_r2_s= PlotTAP_TDiff( SiR1-4-S , SiR2-S ) 
#
##Thin left, thick left
#l11_l2_f= PlotTAP_TDiff( SiL1-1-F , SiL2-F ) 
#l12_l2_f= PlotTAP_TDiff( SiL1-2-F , SiL2-F ) 
#l13_l2_f= PlotTAP_TDiff( SiL1-3-F , SiL2-F ) 
#l14_l2_f= PlotTAP_TDiff( SiL1-4-F , SiL2-F ) 
#l11_l2_s= PlotTAP_TDiff( SiL1-1-S , SiL2-S ) 
#l12_l2_s= PlotTAP_TDiff( SiL1-2-S , SiL2-S ) 
#l13_l2_s= PlotTAP_TDiff( SiL1-3-S , SiL2-S ) 
#l14_l2_s= PlotTAP_TDiff( SiL1-4-S , SiL2-S ) 
#
##Thin and thick left, Left veto
#l11_s_sL= PlotTAP_TDiff( SiL1-1-S , ScL    ) 
#l12_s_sL= PlotTAP_TDiff( SiL1-2-S , ScL    ) 
#l13_s_sL= PlotTAP_TDiff( SiL1-3-S , ScL    ) 
#l14_s_sL= PlotTAP_TDiff( SiL1-4-S , ScL    ) 
#l2_s_sL = PlotTAP_TDiff( SiL2-S   , ScL    ) 
#l11_f_sL= PlotTAP_TDiff( SiL1-1-F , ScL    ) 
#l12_f_sL= PlotTAP_TDiff( SiL1-2-F , ScL    ) 
#l13_f_sL= PlotTAP_TDiff( SiL1-3-F , ScL    ) 
#l14_f_sL= PlotTAP_TDiff( SiL1-4-F , ScL    ) 
#l2_f_sL = PlotTAP_TDiff( SiL2-F   , ScL    ) 
#
##Thin and thick right, Right veto
#r11_s_sR= PlotTAP_TDiff( SiR1-1-S , ScR    ) 
#r12_s_sR= PlotTAP_TDiff( SiR1-2-S , ScR    ) 
#r13_s_sR= PlotTAP_TDiff( SiR1-3-S , ScR    ) 
#r14_s_sR= PlotTAP_TDiff( SiR1-4-S , ScR    ) 
#r2_s_sR = PlotTAP_TDiff( SiR2-S   , ScR    ) 
#r11_f_sR= PlotTAP_TDiff( SiR1-1-F , ScR    ) 
#r12_f_sR= PlotTAP_TDiff( SiR1-2-F , ScR    ) 
#r13_f_sR= PlotTAP_TDiff( SiR1-3-F , ScR    ) 
#r14_f_sR= PlotTAP_TDiff( SiR1-4-F , ScR    ) 
#r2_f_sR = PlotTAP_TDiff( SiR2-F   , ScR    ) 
#
## Various c.f. muSc
#sV_mS   = PlotTAP_TDiff( ScVe     , muSc   ) 
#G_f_mS  = PlotTAP_TDiff( Ge-F     , muSc   ) 
#G_s_mS  = PlotTAP_TDiff( Ge-S     , muSc   ) 
#sG_mS   = PlotTAP_TDiff( ScGe     , muSc   ) 
#
## The rest c.f. muSc so that we can check the time offsets are correct
#r11_f_mS= PlotTAP_TDiff( SiR1-1-F , muSc ) 
#r12_f_mS= PlotTAP_TDiff( SiR1-2-F , muSc ) 
#r13_f_mS= PlotTAP_TDiff( SiR1-3-F , muSc ) 
#r14_f_mS= PlotTAP_TDiff( SiR1-4-F , muSc ) 
#
#r11_s_mS= PlotTAP_TDiff( SiR1-1-S , muSc ) 
#r12_s_mS= PlotTAP_TDiff( SiR1-2-S , muSc ) 
#r13_s_mS= PlotTAP_TDiff( SiR1-3-S , muSc ) 
#r14_s_mS= PlotTAP_TDiff( SiR1-4-S , muSc ) 
#
#l11_f_mS= PlotTAP_TDiff( SiL1-1-F , muSc ) 
#l12_f_mS= PlotTAP_TDiff( SiL1-2-F , muSc ) 
#l13_f_mS= PlotTAP_TDiff( SiL1-3-F , muSc ) 
#l14_f_mS= PlotTAP_TDiff( SiL1-4-F , muSc ) 
#
#l11_s_mS= PlotTAP_TDiff( SiL1-1-S , muSc ) 
#l12_s_mS= PlotTAP_TDiff( SiL1-2-S , muSc ) 
#l13_s_mS= PlotTAP_TDiff( SiL1-3-S , muSc ) 
#l14_s_mS= PlotTAP_TDiff( SiL1-4-S , muSc ) 
#
#l2_s_mS= PlotTAP_TDiff( SiL2-S , muSc ) 
#l2_f_mS= PlotTAP_TDiff( SiL2-F , muSc ) 
#r2_s_mS= PlotTAP_TDiff( SiR2-S , muSc ) 
#r2_f_mS= PlotTAP_TDiff( SiR2-F , muSc ) 
#
#sL_s_mS= PlotTAP_TDiff( ScL , muSc ) 
#sR_f_mS= PlotTAP_TDiff( ScR , muSc ) 
#
#n1_mS= PlotTAP_TDiff( NDet, muSc )
#n2_mS= PlotTAP_TDiff( NDet2, muSc )
#
### Data Quality
#dq_amp = IslandAmplitude
#dq_len = IslandLength

analyse_channels=musc sir2-F sir2-S all
muSc=FirstComplete(0.60,true,false)

SiR2-S=FirstComplete(0.60,true,true)
SiR2-F=FirstComplete(0.90,true,false)
SiL2-S=FirstComplete(0.60,true,true)
SiL2-F=FirstComplete(0.90,true,true)

SiR1-1-S=FirstComplete(0.60,true,false)
SiR1-2-S=FirstComplete(0.40,true,false)
SiR1-3-S=FirstComplete(0.90,true,false)
SiR1-4-S=FirstComplete(0.70,true,false)

SiR1-1-F=FirstComplete(0.70,true,false)
SiR1-2-F=FirstComplete(0.60,true,false)
SiR1-3-F=FirstComplete(0.90,true,false)
SiR1-4-F=FirstComplete(0.70,true,false)

SiL1-1-S=FirstComplete(0.50,true,false)
SiL1-2-S=FirstComplete(0.30,true,false)
SiL1-3-S=FirstComplete(0.40,true,false)
SiL1-4-S=FirstComplete(0.70,true,false)

SiL1-1-F=FirstComplete(0.30,true,false)
SiL1-2-F=FirstComplete(0.10,true,false)
SiL1-3-F=FirstComplete(0.40,true,false)
SiL1-4-F=FirstComplete(0.90,true,false)

Ge-S=FirstComplete(0.60,true,false)
Ge-F=FirstComplete(0.90,true,false)

NDet=FirstComplete(0.50,true,false)
NDet2=FirstComplete(0.50,true,false)
ScR=FirstComplete(0.50,true,false)
ScL=FirstComplete(0.50,true,false)
ScGe=FirstComplete(0.50,true,false)
ScVe=FirstComplete(0.10,true,false)

[ detector_pulses] 
time_difference=1

[ muon_events] 
algorithm=FixedWindow
event_window=1e4

[ load_pulses ]
file_name=input.root

# vim: set syn=cfg:
