{
  gROOT->LoadMacro("palette.cxx");
  SetRainbowPalette();
  gStyle->SetOptStat(1111);
  gStyle->SetPalette(1);

  pad1 = new TPad("AllPads","AllPads",0.00,0.50,0.66,1.0,0); pad1->Draw();
  pad2 = new TPad("SEnergyEarly","SEnergyEarly",0.66,0.50,1.0,1.0,0); 
    pad2->Draw();
  pad3 = new TPad("SVsDrift","SVsDrift",0.00,0.00,0.66,0.5,0); pad3->Draw();
  //pad4 = new TPad("TPCPad22","TPCPad22",0.33,0.00,0.66,0.5,0); pad4->Draw();
  pad5 = new TPad("SEnergyLate","SEnergyLate",0.66,0.0,1.0,0.5,0); 
    pad5->Draw();

  TH3* hTPCProjTracksSEnergyVsDriftTime =
    (TH3*) getHist("hTPCProjTracksSEnergyVsDriftTime");

  /*************** AllPads merged ********************/
  pad1->cd();
  gPad->SetLogz();
  TObject* oldhist = gROOT->FindObjectAny(
    "hTPCProjTracksSEnergyVsDriftTime_yz");
  if(oldhist) delete oldhist;
  TH2* hSvsDriftAllPads = 
    (TH2*)hTPCProjTracksSEnergyVsDriftTime->Project3D("YZ");
  hSvsDriftAllPads->SetTitle("S Energy Vs Drift Time, All pads");
  hSvsDriftAllPads->GetXaxis()->SetRangeUser(0,20000.);
  hSvsDriftAllPads->Draw("colz");

  /*************** SEnergyEarly **********************
  pad2->cd();
  TObject* oldhist = gROOT->FindObjectAny("bigHistClone1_y");
  if(oldhist) delete oldhist;
  bigHistClone1 =(TH3*)hTPCProjTracksSEnergyVsDriftTime->Clone("bigHistClone1");
  bigHistClone1->GetXaxis()->SetRange(21,21); // Set range to pad 21
  bigHistClone1->GetZaxis()->SetRangeUser(4000.,5000.);
  TH2* hPad21SEarly = (TH2*) bigHistClone1->Project3D("Y1");
  bigHistClone1->GetXaxis()->UnZoom();
  bigHistClone1->GetZaxis()->UnZoom();
  delete bigHistClone1;
  
  hPad21SEarly->SetTitle("Pad 21 S for Drift in [4us,5us]");
  hPad21SEarly->GetXaxis()->SetRangeUser(800.,2200.);
  hPad21SEarly->Draw();
  */

  /*************** SEnergyLate **********************
  pad5->cd();
  TObject* oldhist = gROOT->FindObjectAny("bigHistClone2_y");
  if(oldhist) delete oldhist;
  bigHistClone2 =(TH3*)hTPCProjTracksSEnergyVsDriftTime->Clone("bigHistClone2");
  bigHistClone2->GetXaxis()->SetRange(21,21); // Set range to pad 21
  bigHistClone2->GetZaxis()->SetRangeUser(13000.,14000.);
  TH2* hPad21SEarly = (TH2*) bigHistClone2->Project3D("Y2");
  delete bigHistClone2;
  
  hPad21SEarly->SetTitle("Pad 21 S for Drift in [13us,14us]");
  hPad21SEarly->GetXaxis()->SetRangeUser(800.,2200.);
  hPad21SEarly->Draw();
  */

  /*************** Pad 21 SvsDrift *******************/
  pad2->cd();
  TObject* oldhist = gROOT->FindObjectAny("bigHistClone3_YZ");
  if(oldhist) delete oldhist;
  gPad->SetLogz();
  bigHistClone3 =(TH3*)hTPCProjTracksSEnergyVsDriftTime->Clone("bigHistClone3");
  bigHistClone3->GetXaxis()->SetRange(21,21); // Set range to pad 21
  TH2* hPad21Projection = (TH2*) bigHistClone3->Project3D("YZ2");
  delete bigHistClone3;

  hPad21Projection->SetTitle("Pad 21");
  hPad21Projection->GetXaxis()->SetRangeUser(0,20000.);
  hPad21Projection->Draw("colz");

  /*************** Pad 30 SvsDrift *******************/
  pad5->cd();
  TObject* oldhist = gROOT->FindObjectAny("bigHistClone4_yz");
  if(oldhist) oldhist->Clear();
  gPad->SetLogz();
  bigHistClone4 =(TH3*)hTPCProjTracksSEnergyVsDriftTime->Clone("bigHistClone4");
  bigHistClone4->GetXaxis()->SetRange(30,30); // Set range to bin 21
  TH2* hPad30Projection = (TH2*) bigHistClone4->Project3D("YZ3");
  delete bigHistClone4;
  
  hPad30Projection->SetTitle("Pad 30");
  hPad30Projection->GetXaxis()->SetRangeUser(0,20000.);
  hPad30Projection->Draw("colz");

  /*************** Fit Slices ************************/
  pad3->cd();
  TObject* oldhist = gROOT->FindObjectAny(
    "hTPCProjTracksSEnergyVsDriftTime_yz2");
  if(oldhist) delete oldhist;
  TObject* oldarray = gROOT->FindObjectAny("aSlices");
  if(oldarray) delete oldarray;
  TH2* hSvsDriftAllPadsClone = 
    (TH2*)hTPCProjTracksSEnergyVsDriftTime->Project3D("YZ2");
  TF1 f("fitslices","gaus",1000,2000.);
  TObjArray* aSlices = new TObjArray();
  int binlow = hSvsDriftAllPadsClone->GetXaxis()->FindBin(2000.);
  int binhigh = hSvsDriftAllPadsClone->GetXaxis()->FindBin(22000.);
  hSvsDriftAllPadsClone->FitSlicesY(&f,binlow,binhigh,0,"QNRG2",aSlices);
  TH1* hMean = (TH1*) aSlices->At(1); // 1 is mean, 2 is sigma, 3 chisq
  double middleOfYRange = hSvsDriftAllPadsClone->GetMean(2);
  hMean->GetXaxis()->SetRangeUser(0.,20000.);
  hMean->GetYaxis()->SetRangeUser(middleOfYRange - 150., middleOfYRange + 150.);
  hMean->SetMarkerSize(1);
  hMean->SetMarkerStyle(20);
  hMean->SetTitle("Fit S Energy Gauss Mean Vs Drift time");
  hMean->SetXTitle("Drift Time (ns)"); hMean->SetYTitle("S Energy");
  hMean->Draw();
  hMean->Print();
  
}
